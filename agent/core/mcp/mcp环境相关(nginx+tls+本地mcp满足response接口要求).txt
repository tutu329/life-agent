一、安装nginx（用于将mcp的不同端口的http映射到一个https下的不同位置如/sqlite；openai的response api必须mcp开https）
    # 更新包索引
    sudo apt update(注意要关vpn，用清华源的缘故)
    # 安装 nginx
    sudo apt install -y nginx
    # 设置开机自启
    sudo systemctl enable nginx
    # 启动服务
    sudo systemctl start nginx
    # 查看状态
    systemctl status nginx

2、nginx配置(将mcp的8100端口映射为https)
1）生成fullchain(根据测试：powerai_public.crt 与 powerai.key 匹配（两者哈希一致），powerai_chain.crt 是中间证书链（与私钥不匹配是正常的）)
    cd /home/tutu/ssl
    sudo sh -c "cat powerai_public.crt powerai_chain.crt > powerai_fullchain.pem"

2）sudo vi /etc/nginx/sites-available/powerai_mcp.conf
upstream mcp_sqlite     { server 127.0.0.1:8787; }
upstream mcp_everything { server 127.0.0.1:8788; }

server {
    listen 8100 ssl http2;
    server_name powerai.cc;

    ssl_certificate     /home/tutu/ssl/powerai_fullchain.pem;
    ssl_certificate_key /home/tutu/ssl/powerai.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_request_buffering off;
    proxy_read_timeout 1d;
    proxy_send_timeout 1d;

    # 健康检查（可选）
    location = / {
        return 200 "nginx tls ok\n";
        add_header Content-Type text/plain;
    }

    # ===== 根路径 200：避免某些客户端探测 /mcp/<name> 时出现 404 =====
    location = /mcp/sqlite {
        default_type application/json;
        return 200 '{"ok":true,"hint":"use /mcp/sqlite/sse (GET) and /mcp/sqlite/message (POST)"}\n';
    }
    location = /mcp/everything {
        default_type application/json;
        return 200 '{"ok":true,"hint":"use /mcp/everything/sse (GET) and /mcp/everything/message (POST)"}\n';
    }

    # ---------- mcp_sqlite 实例 ----------
    location /mcp/sqlite/sse {
    # SSE:  https://powerai.cc:8100/mcp/sqlite/sse  ->  127.0.0.1:8787/sse
        proxy_set_header Host $host;
        proxy_set_header Connection "";
        proxy_set_header Cache-Control "no-cache";
        proxy_pass http://mcp_sqlite/sse;
    }
    location /mcp/sqlite/message {
    # SSE:  https://powerai.cc:8100/mcp/sqlite/message  ->  127.0.0.1:8787/message
        proxy_set_header Host $host;
        proxy_pass http://mcp_sqlite/message;
    }

    # ---------- everything 实例 ----------
    # SSE:  https://powerai.cc:8100/mcp/everything/sse  ->  127.0.0.1:8788/sse
    location /mcp/everything/sse {
        proxy_set_header Host $host;
        proxy_set_header Connection "";
        proxy_set_header Cache-Control "no-cache";
        proxy_pass http://mcp_everything/sse;
    }
    # POST: https://powerai.cc:8100/mcp/everything/message -> 127.0.0.1:8788/message
    location /mcp/everything/message {
        proxy_set_header Host $host;
        proxy_pass http://mcp_everything/message;
    }
}

3）链接
    sudo ln -s /etc/nginx/sites-available/powerai_mcp.conf /etc/nginx/sites-enabled/

4）检查配置是否正确
    sudo nginx -t

5）重启nginx
    sudo systemctl reload nginx
    systemctl status nginx

二、mcp（注意--baseUrl很关键）
    1)sqlite:
        git clone https://github.com/modelcontextprotocol/servers-archived.git
        cd servers-archived/src/sqlite
        npm install
        pip install uv
        uv sync(开vpn)
        uv run -m mcp_server_sqlite --help(跑本体验证)
        sqlite3 ./test.db 'create table if not exists t(id integer);'
        npx supergateway \
  --stdio "uv run mcp-server-sqlite --db-path ./test.db" \
  --port 8787 \
  --sse \
  --baseUrl "https://powerai.cc:8100/mcp/sqlite"


    2)everything:
        npx supergateway \
  --stdio "npx @modelcontextprotocol/server-everything" \
  --port 8788 \
  --sse \
  --baseUrl "https://powerai.cc:8100/mcp/everything"


三、测试nginx+本地mcp的连通性
    curl -vk https://127.0.0.1:8100/mcp/sqlite/sse
    curl -vk https://127.0.0.1:8100/mcp/everything/sse

四、测试nginx+本地mcp的tool list
1）vi mcp.json
{
  "mcpServers": {
    "sqlite": {
      "type": "sse",
      "url": "https://powerai.cc:8100/mcp/sqlite/sse"
    },
    "everything": {
      "type": "sse",
      "url": "https://powerai.cc:8100/mcp/everything/sse"
    }
  }
}
2）测试
npx -y @modelcontextprotocol/inspector@latest \
  --cli \
  --config ./mcp.json \
  --server sqlite \
  --method tools/list
npx -y @modelcontextprotocol/inspector@latest \
  --cli \
  --config ./mcp.json \
  --server everything \
  --method tools/list